/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/


#include "stm32f4xx.h"

#include "FreeRTOS.h"
#include "FreeRTOSConfig.h"
#include "task.h"

TaskHandle_t * xTaskHandle1 = NULL;
TaskHandle_t * xTaskHandle2 = NULL;

void vTask1_Handler(void *params);
void vTask2_Handler(void *params);

extern void initialise_monitor_handles();

int main(void)
{
	initialise_monitor_handles();

	// 1,  RCC set to the default state ==> SCC - 16 MHz;
	RCC_DeInit();

	// 2. Update system SystemCoreClock variable
	SystemCoreClockUpdate();

	// 3. Create tasks;
	xTaskCreate(vTask1_Handler, "Task-1", configMINIMAL_STACK_SIZE, NULL, 2, xTaskHandle1);
	xTaskCreate(vTask2_Handler, "Task-2", configMINIMAL_STACK_SIZE, NULL, 2, xTaskHandle2);

	// 4, start the scheduler
	vTaskStartScheduler();

	// will neve
	for(;;);



}

void vTask1_Handler(void *params)
{
	while(1);
}
void vTask2_Handler(void *params)
{
	while(1);
}
